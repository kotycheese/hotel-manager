/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.pv168.swing;

import cz.muni.fi.pv168.Guest;
import cz.muni.fi.pv168.Rent;
import cz.muni.fi.pv168.Room;
import java.math.BigDecimal;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.JDialog;
import javax.swing.JSpinner;
import javax.swing.SwingWorker;

/**
 *
 * @author PavelKotala
 */
public class RentDialog extends javax.swing.JDialog {

    private Long id;
    private final Tabs parent;
    private final JDialog dialog = this;
    /**
     * Creates new form RentDialog
     */
    public RentDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = (Tabs)parent;
        startDateSpinner.setEditor(new JSpinner.DateEditor(startDateSpinner, "dd.MM.yyyy"));
        endDateSpinner.setEditor(new JSpinner.DateEditor(endDateSpinner, "dd.MM.yyyy"));
        GuestTableModel guestModel = (GuestTableModel)guestsTable.getModel();
        RoomTableModel roomModel = (RoomTableModel)roomsTable.getModel();
        guestModel.setGuests(this.parent.getGuests());
        roomModel.setRooms(this.parent.getRooms());
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    public void setHeaderText(String header) {
        this.header.setText(header);
    }
    
    public void setStartDate(Date date) {
        startDateSpinner.setValue(date);
    }
    
    public void setEndDate(Date date) {
        endDateSpinner.setValue(date);
    }
    
    public void setPrice(String price) {
        priceField.setText(price);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        startDateSpinner = new javax.swing.JSpinner();
        endDateSpinner = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        guestsTable = new javax.swing.JTable();
        calculateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("texty"); // NOI18N
        header.setText(bundle.getString("new_rent")); // NOI18N

        jLabel2.setText(bundle.getString("guest")); // NOI18N

        jLabel3.setText(bundle.getString("room")); // NOI18N

        jLabel4.setText(bundle.getString("start_date")); // NOI18N

        jLabel5.setText(bundle.getString("end_date")); // NOI18N

        jLabel6.setText(bundle.getString("price")); // NOI18N

        startDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        endDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        jButton1.setText(bundle.getString("submit")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText(bundle.getString("date_format")); // NOI18N

        jLabel8.setText(bundle.getString("date_format")); // NOI18N

        jButton2.setText(bundle.getString("cancel")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        roomsTable.setModel(new RoomTableModel());
        roomsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(roomsTable);

        guestsTable.setModel(new GuestTableModel());
        guestsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(guestsTable);

        calculateButton.setText(bundle.getString("calculate")); // NOI18N
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(header))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(priceField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(endDateSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(startDateSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(calculateButton)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(startDateSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(endDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculateButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Rent rent = new Rent();
        Instant startInstant = ((Date)startDateSpinner.getValue()).toInstant();
        LocalDate startDate = startInstant.atZone(ZoneId.systemDefault()).toLocalDateTime().toLocalDate();
        Instant endInstant = ((Date)endDateSpinner.getValue()).toInstant();
        LocalDate endDate = endInstant.atZone(ZoneId.systemDefault()).toLocalDateTime().toLocalDate();
        
        int selectedRoom = roomsTable.getSelectedRow();
        RoomTableModel roomModel = (RoomTableModel) roomsTable.getModel();
        Room room = roomModel.getRoomAt(selectedRoom);
        int selectedGuest = guestsTable.getSelectedRow();
        GuestTableModel guestModel = (GuestTableModel) guestsTable.getModel();
        Guest guest = guestModel.getGuestAt(selectedGuest);
        
        rent.setStartDate(startDate);
        rent.setEndDate(endDate);
        rent.setPrice(BigDecimal.valueOf(Double.parseDouble(priceField.getText())));
        rent.setId(id);
        rent.setGuest(guest);
        rent.setRoom(room);
        
        final JDialog process = new ProcessingDialog(this, true);
        
        SwingWorker sw = new RentSwingWorker(rent, false) {
            @Override
            protected void done() {
                process.setVisible(false);
                dialog.setVisible(false);
                try {
                    List<Rent> rents = get();
                    parent.refreshRents(rents);
                } catch (InterruptedException ex) {
                    throw new RuntimeException("Operation interrupted (this should never happen)",ex);
                } catch (Exception ex) {
                    ErrorDialog error = new ErrorDialog(parent, false);
                    error.setText("Exception thrown in doInBackground(): " + ex.getCause());
                    error.setVisible(true);
                }
            }
        };
        sw.execute();
        process.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        int selectedRoom = roomsTable.getSelectedRow();
        RoomTableModel roomModel = (RoomTableModel) roomsTable.getModel();
        Room room = roomModel.getRoomAt(selectedRoom);
        
        Instant startInstant = ((Date)startDateSpinner.getValue()).toInstant();
        LocalDate startDate = startInstant.atZone(ZoneId.systemDefault()).toLocalDateTime().toLocalDate();
        Instant endInstant = ((Date)endDateSpinner.getValue()).toInstant();
        LocalDate endDate = endInstant.atZone(ZoneId.systemDefault()).toLocalDateTime().toLocalDate();
        
        long days = java.time.temporal.ChronoUnit.DAYS.between(startDate, endDate);
        BigDecimal price = room.getPricePerNight().multiply(BigDecimal.valueOf(days));
        priceField.setText(price.toString());
    }//GEN-LAST:event_calculateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RentDialog dialog = new RentDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateButton;
    private javax.swing.JSpinner endDateSpinner;
    private javax.swing.JTable guestsTable;
    private javax.swing.JLabel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceField;
    private javax.swing.JTable roomsTable;
    private javax.swing.JSpinner startDateSpinner;
    // End of variables declaration//GEN-END:variables
}
